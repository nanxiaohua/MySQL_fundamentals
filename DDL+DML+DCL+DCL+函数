show databases;
use itheima;
show tables;
desc user;
show create table course;

use itheima;
create table employee(
	id int comment '编号',
    workno varchar(10) comment '工号',
    name varchar(10) comment '姓名',
    gender char(1) comment '性别',
    age int comment'年龄',
    idcard char(18) comment '身份证号',
    entrydate date comment '入职日期'
    )comment '员工表';
show tables;
-- 表的增删改操作(DML)-----------------------------------------------------
insert into employee(id, workno, name, gender, age, idcard, entrydate)  values(1,'1','itcast','男',10,'123456789012345678','2000-01-01');
select * from employee;
insert into employee values(2,'2','张无忌','男',18,'123456789012345670','2005-01-01');
insert into employee values(3,'3','韦一笑','男',38,'123456789712345670','2005-01-01'),(4,'4','赵敏','女',18,'123456785712345670','2005-01-01');
SET SQL_SAFE_UPDATES = 0;  
update employee set name='itheima' where id=1;                -- 修改id为1的数据，name修改为itheima
update employee set name='小昭', gender='女' where id=1;       -- 修改id为1的数据，name修改为小昭，gender修改为女
select * from employee;
update employee set entrydate='2008-01-01';                   -- 所有的entrydate资料全修改为2008-01-01
delete from employee where gender='女';                       -- 删除所有gender是女的资料
delete from employee;                                         -- 删除表中所有资料


-- 表的查询操作(DQL)------------------------------------------------
drop table employee;
drop table emp;
create table emp(
    id int comment '编号',
    workno varchar(10) comment '工号',
    name varchar(10) comment '姓名',
    gender char(1) comment '性别',
    age tinyint unsigned comment '年龄',
    idcard char(18) comment '身份证号',
    workaddress varchar(50) comment '工作地址',
    entrydate date comment '入职时间'
) comment '员工表';
insert into emp values
    (1, '1', '柳岩', '女', 20, '123456789012345678', '北京', '2000-01-01'),
    (2, '2', '张无忌', '男', 18, '123456789012345670', '北京', '2005-09-01'),
    (3, '3', '韦一笑', '男', 38, '123456789712345670', '上海', '2005-08-01'),
    (4, '4', '赵敏', '女', 18, '123456757123845670', '北京', '2009-12-01'),
    (5, '5', '小昭', '女', 16, '123456769012345678', '上海', '2007-07-01'),
    (6, '6', '杨逍', '男', 28, '12345678931234567X', '北京', '2006-01-01'),
    (7, '7', '范瑶', '男', 40, '123456789212345678', '北京', '2005-05-01'),
    (8, '8', '黛绮丝', '女', 38, '123456157123645678', '天津', '2015-05-01'),
    (9, '9', '范凉凉', '女', 45, '123156789012345678', '北京', '2010-04-01'),
    (10, '10', '陈友谅', '男', 53, '123456789012345670', '上海', '2011-01-01'),
    (11, '11', '张士诚', '男', 55, '123567897123465670', '江苏', '2015-05-01'),
    (12, '12', '常遇春', '男', 32, '123446757152345678', '北京', '2004-02-01'),
    (13, '13', '张三丰', '男', 88, '123656789012345678', '江苏', '2020-11-01'),
    (14, '14', '灭绝', '女', 65, '123456719012345678', '西安', '2019-05-01'),
    (15, '15', '胡青牛', '男', 70, '12345674971234567X', '西安', '2018-04-01'),
    (16, '16', '周芷若', '女', 18, null, '北京', '2012-06-01');
-- 基本查询
select name,workno,age from emp;                   -- 查询表中指定字段
select * from emp;                                 -- 查询表中所有字段(开发人员最好避免用通配符*，应该把所有字段罗列出来)
select workaddress as '工作地址' from emp;           -- 查询表中所有员工的工作地址＋起别名
select workaddress '工作地址' from emp;              -- 起别名as可以省略
select distinct emp.workaddress from emp;           -- 查询工作地址，不要重复
-- 条件查询
select * from emp where age=88;                     -- 查询年龄为88的员工
select * from emp where age<=20;                    -- 查询年龄<=20的员工
select * from emp where idcard is null;             -- 查询没有身份证号的员工
select * from emp where idcard is not null;         -- 查询有身份证号的员工
select * from emp where age <> 88;
select * from emp where age != 88;                  -- 查询年龄不等于88的员工
select * from emp where age >=15 && age <=20;
select * from emp where age between 15 and 20;       -- 查询年龄在15到20之间的员工，包含15和20(&&一般换为and)
select * from emp where age <25 and gender='女';     -- 查询性别为女且年龄小于25的员工
select * from emp where age=18 or age=20 or age=40;
select * from emp where age in(18,20,40);           -- 查询年龄等于18或20或40的员工
select * from emp where name like '___';            -- 查询姓名为三个字的员工
select * from emp where idcard like '%X';           -- 查询身份证号最后一位是X的员工
-- 聚合函数
select count(*) from emp;                                                                                               -- 统计员工数量
select count(idcard) from emp;                                                                                          -- 注：null值不参与聚合函数运算
select avg(age) from emp;                                                                                               -- 统计员工平均年龄
select max(age) from emp;
select min(age) from emp;
select sum(age) from emp where workaddress='西安';                                                                       -- 统计西安地区员工的年龄之和
-- 分组查询
select gender,count(*) from emp group by gender;                                                                        -- 根据性别分组，统计男女员工的数量
select gender,avg(age) from emp group by gender;                                                                        -- 根据性别分组，统计男女员工的平均年龄
select workaddress,count(*) from emp where age<45 group by workaddress having count(*)>=3;                              -- 查询年龄小于45的员工，并根据工作地址分组，获取员工数量大于等于3的工作地址
select workaddress,count(*) address_count from emp where age<45 group by workaddress having address_count>=3;           -- 这里仅给地址数量的聚合函数起别名“address_count”
select workaddress address,count(*) address_count from emp where age<45 group by workaddress having address_count>=3;   -- 这里给字段名workaddress也起了别名“address”
-- 排序查询
select * from emp order by age desc;                                                                                    -- 根据年龄对员工进行降序(升序时asc可省)
select * from emp order by entrydate desc;                                                                              -- 根据入职时间对员工进行降序
select * from emp order by age asc, entrydate desc;                                                                     -- 根据年龄对员工进行升序，年龄相同时按入职时间降序(asc可省)
-- 分页查询
select * from emp limit 0,10;                                                                                           -- 查询第1页员工数据，每页展示10条记录
select * from emp limit 10;
select * from emp limit 10,10;                                                                                          -- 查询第2页员工数据，每页展示10条记录
-- 练习
select * from emp where age in(20,21,22,23) and gender='女';
select * from emp where gender='男' and (age between 20 and 40) and name like '___';                                    -- ()可有可无，只是为了便于观察
select gender,count(*) from emp where age <60 group by gender having count(*);                                          -- having及后面的条件可以省略
select name, age from emp where age<=35 order by age asc, entrydate desc;
select * from emp where age between 20 and 40 and gender='男' order by age asc,entrydate asc limit 5;
select e.name ename, e.age eage from emp e where age>15 order by eage asc;                                               -- 执行顺序在前的语句起别名，执行顺序在后的语句可以用别名，反之不行(执行顺序：from,where,group by＋having,select,order by,limit)


-- DCL-------------------------------------------------------------------------
-- 查询用户
use mysql;
select * from user;
-- 创建用户
create user 'itcast'@'localhost' identified by '0823nanxiaohua';                                                        -- 创建用户itcast，只能够在当前主机localcast访问，密码0823nanxiaohua
create user 'heima'@'%' identified by '123456';                                                                         -- 创建用户heima，能在任意主机访问该数据库，密码123456
-- 修改用户密码
alter user 'heima'@'%' identified with mysql_native_password by '0823nanxiaohua';
-- 删除用户
drop user 'itcast'@'localhost';                                                                                         -- 删除用户itcast
-- 权限控制
show grants for 'heima'@'%';                                                                                            -- result显示grant usage on *.* to heima@%(仅授予usage也就是登录mysql的权限，并无其他任何权限)
grant all on itcast.* to 'heima'@'%';                                                                                   -- 把itcast库中所有表的所有权限授予heima@%
revoke all on itcast.* from 'heima'@'%';                                                                                -- 撤销heima@%对itcast库中所有表的所有权限

-- 函数-----------------------------------------------------------------------
-- 字符串函数
select concat('Hello','MySQL');
select lower('Hello');
select upper('Hello');
select lpad('01',5,'-');
select rpad('01',5,'-');
select trim(' Hello  MySQL'  );
select substring('Hello MySQL',1,5);
-- 实例
use itcast;
update emp set workno=lpad(workno,5,'0');                                                                               -- 由于业务需求变更，企业员工的工号统一为5位数，目前不足5位的全部在前面补0
-- 数值函数
select ceil(1.2);
select floor(1.6);
select mod(6,4);
select rand();
select round(2.345,2);
-- 实例
select substring(rand(),3,6);
select lpad(round(rand()*1000000,0),6,'0');                                                                             -- 随机生成一个六位数的验证码
-- 日期函数
select curdate();
select curtime();
select now();
select year(now());
select month(now());
select day(now());
select date_add(now(),INTERVAL 70 DAY);
select date_add(now(),INTERVAL 70 MONTH);
select date_add(now(),INTERVAL 70 YEAR);
select datediff('2021-12-01','2021-10-01');
-- 实例
select *,datediff(curdate(),entrydate) '入职天数' from emp  order by 入职天数 desc;
select name,datediff(curdate(),entrydate) as 'entrydays' from emp order by entrydays desc;                              -- 查询所有员工的入职天数，并根据入职天数降序(函数也可以起别名，起别名时加‘’，在起别名所在语句执行顺序之后的语句不加‘’)
-- 流程控制函数
select if(true,'Ok','Error');
select if(false,'Ok','Error');                                                                                          -- if的第一个参数值是true(这里一般进行条件判断)，则返回第二个参数，否则返回第三个参数
select ifnull('Ok','Default');                                                                                          -- ifnull的第一个参数值不为null，返回Ok
select ifnull('','Default');                                                                                            -- 空格和null不等价，返回空格
select ifnull(null,'Default');                                                                                          -- ifnull的第一个参数值为null，返回Default
use itheima;
select
    name,
    (case workaddress when '北京' then '一线城市' when '上海' then '一线城市' else '二线城市' end) as '工作地址'
from emp;                                                                                                               -- 查询emp表的员工姓名和工作地址，地址是北京/上海的改为一线城市，地址是其他的改为二线城市
select name,if(workaddress='北京'or workaddress='上海','一线城市','二线城市') '工作地址' from emp;                            -- 同上（自己想的）
-- 案例
create table score(
    id int comment 'ID',
    name varchar(20) comment '姓名',
    math int comment '数学',
    english int comment '英语',
    chinese int comment '语文'
)comment '学员成绩表';
insert into score values (1,'Tom',67,88,95),(2,'Rose',23,66,90),(3,'Jack',56,98,76);                                    -- 数据准备
select * from score;
select id,name,
       (case when math >=85 then '优秀' when math >=60 then '及格' else '不及格' end) '数学',
       (case when english >=85 then '优秀' when english >=60 then '及格' else '不及格' end) '英语',
       (case when chinese >=85 then '优秀' when chinese >=60 then '及格' else '不及格' end) '语文'
       from score;                                                                                                      -- 统计各个学员的成绩，展示规则如下：>=85展示优秀，>=60展示及格，否则展示不及格






